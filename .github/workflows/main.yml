name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: undergroundbb
  POSTGRES_HOST: localhost
  REDIS_HOST: localhost
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  FRONTEND_URL: http://localhost:3000
  API_URL: http://localhost:3001
  API_PORT: 3001

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:latest
        env:
          REDIS_PASSWORD: ${{ env.REDIS_PASSWORD }}
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

  backend:
    needs: setup
    runs-on: ubuntu-latest
    services:
      node:
        image: node:18
        options: >-
          --health-cmd="curl --fail http://localhost:3001 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run backend
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
          REDIS_HOST: ${{ env.REDIS_HOST }}
          REDIS_PASSWORD: ${{ env.REDIS_PASSWORD }}
          SESSION_SECRET: ${{ env.SESSION_SECRET }}
          FRONTEND_URL: ${{ env.FRONTEND_URL }}
        run: |
          cd backend
          npm run start:dev &
          sleep 10

  frontend:
    needs: backend
    runs-on: ubuntu-latest
    services:
      nginx:
        image: nginx:latest
        ports:
          - 80:80
        options: >-
          --health-cmd="curl --fail http://localhost || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Deploy to Nginx
        run: |
          cd frontend
          cp -r build/* /usr/share/nginx/html/

  tests:
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run Playwright tests
        run: |
          cd frontend
          npm run test:e2e
