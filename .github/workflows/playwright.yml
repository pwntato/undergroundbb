name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    environment: CI

    name: Run Playwright Tests
    runs-on: ubuntu-latest

    env:
      REACT_APP_API_URL: ${{ secrets.API_URL }}
      API_PORT: 3001
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_HOST: localhost
      DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
      REDIS_HOST: localhost
      REDIS_PASSWORD:
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      FRONTEND_URL: http://localhost:3000
      SESSION_TIMEOUT_HOURS: 0.5

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Backend Dependencies
        working-directory: backend
        run: npm ci

      - name: Run Backend Migrations
        working-directory: backend
        run: npm run migrate

      - name: Start Backend Service
        working-directory: backend
        run: |
          PORT=3001 npm start &
        env:
          NODE_ENV: test

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Start Frontend Service
        working-directory: frontend
        run: |
          PORT=3000 npm start &
          sleep 20  # Wait for frontend to be ready

      - name: Run Playwright Tests
        working-directory: frontend
        run: npm run test:e2e

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 3
